name: Build AAudio (arm64 + armv7 with fallback)
on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - abi: arm64-v8a
            api: 28
            triplet: aarch64-linux-android
          - abi: armeabi-v7a
            api: 28
            triplet: armv7a-linux-androideabi
    steps:
      - uses: actions/checkout@v4

      - name: Set up NDK
        uses: nttld/setup-ndk@v1
        with: { ndk-version: r29 }

      - name: Show tree
        run: |
          pwd
          ls -la
          find . -maxdepth 6 -name "CMakeLists.txt" -o -name "CMakeList.txt" -print

      - name: Configure (CMake)
        run: |
          cmake -S app/src/main/cpp -B build/${{ matrix.abi }} \
            -G Ninja \
            -DANDROID_ABI=${{ matrix.abi }} \
            -DANDROID_PLATFORM=android-${{ matrix.api }} \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
            -DANDROID_STL=c++_static \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_VERBOSE_MAKEFILE=ON \
            --debug-find

      - name: Build (CMake)
        id: cmake_build
        continue-on-error: true
        run: |
          set -o pipefail
          cmake --build build/${{ matrix.abi }} --config Release -j 2 --verbose 2>&1 | tee build_${{ matrix.abi }}.log

      - name: Install (CMake)
        if: steps.cmake_build.outcome == 'success'
        run: |
          cmake --install build/${{ matrix.abi }} --prefix dist/${{ matrix.abi }}
          echo "---- INSTALLED ----"
          find dist/${{ matrix.abi }} -type f -name "*.so" -print

      # Fallback: если CMake-билд упал (особенно для armeabi-v7a), собираем напрямую clang++
      - name: Fallback build (clang++)
        if: steps.cmake_build.outcome != 'success'
        run: |
          echo "CMake build failed for ${{ matrix.abi }} — trying direct clang++ fallback"
          TOOL=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/${{ matrix.triplet }}${{ matrix.api }}-clang++
          mkdir -p dist/${{ matrix.abi }}
          "$TOOL" -shared app/src/main/cpp/audiotrack_player.cpp -o dist/${{ matrix.abi }}/libvarkynth_audiotrack.so \
            -fPIC -O2 \
            -latomic -llog -landroid -laaudio
          echo "---- FALLBACK SO ----"
          ls -la dist/${{ matrix.abi }}/ || true

      - name: Upload artifacts (.so + logs)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: varkynth_audiotrack_${{ matrix.abi }}
          path: |
            dist/${{ matrix.abi }}/**/*.so
            build/${{ matrix.abi }}/CMakeCache.txt
            build_${{ matrix.abi }}.log